openapi: 3.0.0
info:
  title: TxDxAI API
  description: Multi-tenant Cybersecurity and Ticket Automation API
  version: 1.0.0
servers:
  - url: /api
    description: API base path

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    Company:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date-time
    
    User:
      type: object
      properties:
        id:
          type: integer
        company_id:
          type: integer
        username:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [ADMIN, USER]
        created_at:
          type: string
          format: date-time
    
    Ticket:
      type: object
      properties:
        id:
          type: integer
        company_id:
          type: integer
        created_by_user_id:
          type: integer
        subject:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [PENDING, EXECUTED, FAILED, DERIVED]
        executed_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
    
    Integration:
      type: object
      properties:
        id:
          type: integer
        company_id:
          type: integer
        provider:
          type: string
          enum: [palo_alto, splunk, wazuh, meraki, grafana]
        type:
          type: string
        capabilities:
          type: array
          items:
            type: string
        config:
          type: object
        keyvault_secret_id:
          type: string
        extra_json:
          type: object
        created_at:
          type: string
          format: date-time
    
    System:
      type: object
      properties:
        id:
          type: integer
        company_id:
          type: integer
        name:
          type: string
        type:
          type: string
        status:
          type: string
          enum: [online, offline, degraded, unknown]
        health_score:
          type: number
        last_check:
          type: string
          format: date-time
        meta_info:
          type: object
        created_at:
          type: string
          format: date-time
    
    Alert:
      type: object
      properties:
        id:
          type: integer
        company_id:
          type: integer
        system_id:
          type: integer
        title:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [critical, high, medium, low]
        status:
          type: string
          enum: [active, resolved, acknowledged]
        source_provider:
          type: string
        meta_info:
          type: object
        resolved_at:
          type: string
          format: date-time
        resolved_by_user_id:
          type: integer
        created_at:
          type: string
          format: date-time
    
    Vulnerability:
      type: object
      properties:
        id:
          type: integer
        company_id:
          type: integer
        system_id:
          type: integer
        cve_id:
          type: string
        title:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [critical, high, medium, low]
        cvss_score:
          type: number
        status:
          type: string
          enum: [open, patching, resolved]
        patch_status:
          type: string
        source_provider:
          type: string
        meta_info:
          type: object
        created_at:
          type: string
          format: date-time
    
    Error:
      type: object
      properties:
        error:
          type: string

security:
  - BearerAuth: []

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new ADMIN user and company
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - company_name
                - username
                - email
                - password
              properties:
                company_name:
                  type: string
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
                  access_token:
                    type: string
                  refresh_token:
                    type: string
  
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login with username and password
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
                  access_token:
                    type: string
                  refresh_token:
                    type: string
  
  /companies:
    get:
      tags:
        - Companies
      summary: Get user's company
      responses:
        '200':
          description: List of companies
          content:
            application/json:
              schema:
                type: object
                properties:
                  companies:
                    type: array
                    items:
                      $ref: '#/components/schemas/Company'
  
  /companies/{company_id}:
    get:
      tags:
        - Companies
      summary: Get company by ID
      parameters:
        - name: company_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Company details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
    
    put:
      tags:
        - Companies
      summary: Update company (ADMIN only)
      parameters:
        - name: company_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Company updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  company:
                    $ref: '#/components/schemas/Company'
  
  /users:
    get:
      tags:
        - Users
      summary: Get all users in company
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
    
    post:
      tags:
        - Users
      summary: Create a new user (ADMIN only)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  enum: [ADMIN, USER]
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
  
  /users/{user_id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    
    put:
      tags:
        - Users
      summary: Update user
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  enum: [ADMIN, USER]
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
    
    delete:
      tags:
        - Users
      summary: Delete user (ADMIN only)
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  
  /tickets:
    get:
      tags:
        - Tickets
      summary: Get all tickets
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [PENDING, EXECUTED, FAILED, DERIVED]
      responses:
        '200':
          description: List of tickets
          content:
            application/json:
              schema:
                type: object
                properties:
                  tickets:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ticket'
    
    post:
      tags:
        - Tickets
      summary: Create a new ticket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - subject
              properties:
                subject:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: Ticket created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  ticket:
                    $ref: '#/components/schemas/Ticket'
  
  /tickets/{ticket_id}:
    get:
      tags:
        - Tickets
      summary: Get ticket by ID
      parameters:
        - name: ticket_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Ticket details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
    
    put:
      tags:
        - Tickets
      summary: Update ticket
      parameters:
        - name: ticket_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  type: string
                description:
                  type: string
                status:
                  type: string
                  enum: [PENDING, EXECUTED, FAILED, DERIVED]
      responses:
        '200':
          description: Ticket updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  ticket:
                    $ref: '#/components/schemas/Ticket'
    
    delete:
      tags:
        - Tickets
      summary: Delete ticket
      parameters:
        - name: ticket_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Ticket deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  
  /integrations:
    get:
      tags:
        - Integrations
      summary: Get all integrations
      responses:
        '200':
          description: List of integrations
          content:
            application/json:
              schema:
                type: object
                properties:
                  integrations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Integration'
    
    post:
      tags:
        - Integrations
      summary: Create a new integration (ADMIN only)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - provider
                - credentials
              properties:
                provider:
                  type: string
                  enum: [palo_alto, splunk, wazuh, meraki]
                name:
                  type: string
                credentials:
                  type: object
                extra_json:
                  type: object
      responses:
        '201':
          description: Integration created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  integration:
                    $ref: '#/components/schemas/Integration'
  
  /integrations/{integration_id}:
    get:
      tags:
        - Integrations
      summary: Get integration by ID
      parameters:
        - name: integration_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Integration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
    
    put:
      tags:
        - Integrations
      summary: Update integration (ADMIN only)
      parameters:
        - name: integration_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                credentials:
                  type: object
                extra_json:
                  type: object
      responses:
        '200':
          description: Integration updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  integration:
                    $ref: '#/components/schemas/Integration'
    
    delete:
      tags:
        - Integrations
      summary: Delete integration (ADMIN only)
      parameters:
        - name: integration_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Integration deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  
  /integrations/{integration_id}/credentials:
    get:
      tags:
        - Integrations
      summary: Get integration credentials from Key Vault (ADMIN only)
      parameters:
        - name: integration_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Integration credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  credentials:
                    type: object
  
  /systems:
    get:
      tags:
        - Systems
      summary: Get all systems
      responses:
        '200':
          description: List of systems
          content:
            application/json:
              schema:
                type: object
                properties:
                  systems:
                    type: array
                    items:
                      $ref: '#/components/schemas/System'
  
  /systems/status:
    get:
      tags:
        - Systems
      summary: Get system status overview
      responses:
        '200':
          description: System status overview
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_systems:
                    type: integer
                  online:
                    type: integer
                  offline:
                    type: integer
                  degraded:
                    type: integer
                  average_health_score:
                    type: number
  
  /alerts/active:
    get:
      tags:
        - Alerts
      summary: Get active alerts
      parameters:
        - name: since
          in: query
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
      responses:
        '200':
          description: List of active alerts
          content:
            application/json:
              schema:
                type: object
                properties:
                  alerts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Alert'
  
  /alerts/{alert_id}/resolve:
    post:
      tags:
        - Alerts
      summary: Resolve an alert
      parameters:
        - name: alert_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Alert resolved
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  alert:
                    $ref: '#/components/schemas/Alert'
  
  /vulnerabilities:
    get:
      tags:
        - Vulnerabilities
      summary: Get all vulnerabilities
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [open, patching, resolved]
        - name: severity
          in: query
          schema:
            type: string
            enum: [critical, high, medium, low]
      responses:
        '200':
          description: List of vulnerabilities
          content:
            application/json:
              schema:
                type: object
                properties:
                  vulnerabilities:
                    type: array
                    items:
                      $ref: '#/components/schemas/Vulnerability'
  
  /vulnerabilities/{vuln_id}:
    get:
      tags:
        - Vulnerabilities
      summary: Get vulnerability by ID
      parameters:
        - name: vuln_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Vulnerability details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vulnerability'
  
  /vulnerabilities/{vuln_id}/patch:
    post:
      tags:
        - Vulnerabilities
      summary: Initiate patch process for vulnerability
      parameters:
        - name: vuln_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Patch process initiated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  vulnerability:
                    $ref: '#/components/schemas/Vulnerability'
  
  /analytics/incidents:
    get:
      tags:
        - Analytics
      summary: Get incident analytics
      parameters:
        - name: hours
          in: query
          schema:
            type: integer
            default: 24
      responses:
        '200':
          description: Incident analytics
          content:
            application/json:
              schema:
                type: object
                properties:
                  period_hours:
                    type: integer
                  total_incidents:
                    type: integer
                  by_severity:
                    type: object
                  timestamp:
                    type: string
                    format: date-time
  
  /analytics/response-time:
    get:
      tags:
        - Analytics
      summary: Get response time analytics
      parameters:
        - name: days
          in: query
          schema:
            type: integer
            default: 7
      responses:
        '200':
          description: Response time analytics
          content:
            application/json:
              schema:
                type: object
                properties:
                  period_days:
                    type: integer
                  average_response_time_minutes:
                    type: number
                  total_resolved_alerts:
                    type: integer
                  timestamp:
                    type: string
                    format: date-time
  
  /analytics/vulnerability-distribution:
    get:
      tags:
        - Analytics
      summary: Get vulnerability distribution analytics
      responses:
        '200':
          description: Vulnerability distribution
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_active_vulnerabilities:
                    type: integer
                  by_severity:
                    type: object
                  by_cvss_range:
                    type: object
                  timestamp:
                    type: string
                    format: date-time
  
  /analytics/summary:
    get:
      tags:
        - Analytics
      summary: Get analytics summary
      responses:
        '200':
          description: Analytics summary
          content:
            application/json:
              schema:
                type: object
                properties:
                  active_alerts:
                    type: integer
                  open_vulnerabilities:
                    type: integer
                  pending_tickets:
                    type: integer
                  timestamp:
                    type: string
                    format: date-time
